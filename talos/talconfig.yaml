---
clusterName: &cluster k8s

clusterPodNets:
  - 10.244.0.0/16
clusterSvcNets:
  - 10.245.0.0/16

# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.7.6
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.30.4

endpoint: https://k8s.${PRIVATE_DOMAIN}:6443

additionalApiServerCertSans: &san
  - ${CLUSTER_ENDPOINT_IP}
  - k8s.${PRIVATE_DOMAIN}
  - 127.0.0.1

additionalMachineCertSans: *san

cniConfig:
  name: none

nodes:
  - hostname: cp01.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.201
    installDisk: /dev/vda
    controlPlane: true
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: cp
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/intel-ucode
            - siderolabs/i915-ucode
            - siderolabs/qemu-guest-agent

  - hostname: cp02.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.202
    installDisk: /dev/vda
    controlPlane: true
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: cp
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/intel-ucode
            - siderolabs/i915-ucode
            - siderolabs/qemu-guest-agent

  - hostname: cp03.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.203
    installDisk: /dev/vda
    controlPlane: true
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: cp
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/amd-ucode
            - siderolabs/qemu-guest-agent

  - hostname: wk01.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.211
    installDisk: /dev/vda
    controlPlane: false
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: wk
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/intel-ucode
            - siderolabs/i915-ucode
            - siderolabs/qemu-guest-agent

  - hostname: wk02.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.212
    installDisk: /dev/vda
    controlPlane: false
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: wk
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/intel-ucode
            - siderolabs/i915-ucode
            - siderolabs/qemu-guest-agent

  - hostname: wk03.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.213
    installDisk: /dev/vda
    controlPlane: false
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: wk
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/amd-ucode
            - siderolabs/qemu-guest-agent
            - siderolabs/nonfree-kmod-nvidia
            - siderolabs/nvidia-container-toolkit
    patches:
      - |-
        - op: add
          path: /machine/kernel
          value:
            modules:
              - name: nvidia
              - name: nvidia_uvm
              - name: nvidia_drm
              - name: nvidia_modeset
        - op: add
          path: /machine/files
          value:
            - content: |
                [plugins]
                  [plugins."io.containerd.grpc.v1.cri"]
                    [plugins."io.containerd.grpc.v1.cri".containerd]
                      default_runtime_name = "nvidia"
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
                  privileged_without_host_devices = false
                  runtime_engine = ""
                  runtime_root = ""
                  runtime_type = "io.containerd.runc.v2"
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
                  BinaryName = "/usr/bin/nvidia-container-runtime"
              path: /etc/cri/conf.d/20-customization.part
              op: create

  - hostname: wk04.${PRIVATE_DOMAIN}
    ipAddress: 192.168.10.214
    installDisk: /dev/vda
    controlPlane: false
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        dhcp: true
    nodeLabels:
      topology.kubernetes.io/region: k8s
      topology.kubernetes.io/zone: wk
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/intel-ucode
            - siderolabs/i915-ucode
            - siderolabs/qemu-guest-agent

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: cp
  patches:
    # Set all disks to no scheduler
    - &noschedulerPatch |-
      machine:
        udev:
          rules:
            # set all disks to `none` scheduler (optimal setting for Ceph and ZFS)
            - SUBSYSTEM=="block", ENV{DEVTYPE}=="disk", ATTR{queue/scheduler}="none"
            # allow GID 44 (video) to use Intel GPU
            - SUBSYSTEM=="drm", GROUP="44", MODE="0660"
    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - &discoveryPatch |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true
            rotate-server-certificates: true
          nodeIP:
            validSubnets:
              - 192.168.10.0/24

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Enable logging
    - &loggingPatch |-
      machine:
        logging:
          destinations:
            - endpoint: udp://vector.${PRIVATE_DOMAIN}:6002
              format: json_lines

    # Force nameserver
    - &nameserverPatch |-
      machine:
        network:
          nameservers:
            - 192.168.1.1

    # Configure NFS mount options
    - &nfsPatch |-
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.1
              hard=True
              noatime=True
              nodiratime=True
              rsize=131072
              wsize=131072
              nconnect=8

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Static host entries
    - &staticHostEntriesPatch |-
      machine:
        network:
          extraHostEntries:
            - ip: ${CLUSTER_ENDPOINT_IP}
              aliases:
                - k8s.${PRIVATE_DOMAIN}
            - ip: 192.168.1.1
              aliases:
                - opnsense.${PRIVATE_DOMAIN}
            - ip: 192.168.10.10
              aliases:
                - nas.${PRIVATE_DOMAIN}
                - s3.${PRIVATE_DOMAIN}
            - ip: 192.168.15.4
              aliases:
                - vector.${PRIVATE_DOMAIN}

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          kernel.randomize_va_space: 0
          net.core.netdev_max_backlog: 30000
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_window_scaling: 1

    # Custom Talos installer patch
    - &talosPatch |-
      machine:
        install:
          extraKernelArgs:
            - cpufreq.default_governor=performance
            - intel_iommu=on
            - intel_pstate=disable
            - iommu=pt
            - mitigations=off
            - net.ifnames=0
            - talos.logging.kernel=udp://vector.${PRIVATE_DOMAIN}:6001/
          legacyBIOSSupport: true

    # Tailscale auth
    # - &tailscalePatch |-
    #   machine:
    #     files:
    #       - content: |
    #           TS_AUTHKEY=${SECRET_TS_AUTHKEY}
    #         permissions: 0o644
    #         path: /var/etc/tailscale/auth.env
    #         op: create

    # Mount openebs-hostpath in kubelet
    - &openebsPatch |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options: ["bind", "rshared", "rw"]

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
            unsafe-no-fsync: true
          advertisedSubnets:
            - 192.168.10.0/24

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - system-upgrade

    # Enable host dns
    - &hostDnsPatch |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: true

worker:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: wk
  patches:
    - *containerdPatch
    - *disableSearchDomainPatch
    - *discoveryPatch
    - *kubeletPatch
    - *kubePrismPatch
    - *loggingPatch
    - *nameserverPatch
    - *nfsPatch
    - *ntpPatch
    - *staticHostEntriesPatch
    - *sysctlPatch
    - *talosPatch
    # - *tailscalePatch
    - *noschedulerPatch
    - *openebsPatch
    - *hostDnsPatch
