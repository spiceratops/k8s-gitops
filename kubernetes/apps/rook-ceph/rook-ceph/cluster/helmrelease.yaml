---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.18.4
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system

  values:
    image:
      repository: ghcr.io/rook/ceph
      tag: v1.18.5
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: internal
        annotations:
          gethomepage.dev/icon: mdi-chess-rook
        host:
          name: ${HOSTNAME}
          path: /
        tls:
          - hosts:
              - ${HOSTNAME}
    toolbox:
      enabled: true
    cephClusterSpec:
      network:
        provider: host
        connections:
          requireMsgr2: true
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
      cleanupPolicy:
        wipeDevicesFromOtherClusters: true
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.monitoring.svc.cluster.local:9090
      csi:
        readAffinity:
          enabled: true
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      storage:
        useAllNodes: true
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
        devicePathFilter: /dev/disk/by-id/nvme-Micron_7450_MTFDKBG1T9TFR_.*
      resources:
        mgr:
          limits:
            cpu: 500m
            memory: 640Mi
          requests:
            cpu: 50m
            memory: 320Mi
        mon:
          limits:
            cpu: 500m
            memory: 640Mi
          requests:
            cpu: 100m
            memory: 320Mi
        osd:
          limits:
            cpu: 500m
            memory: 1600Mi
          requests:
            cpu: 150m
            memory: 800Mi
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ${CLUSTER_STORAGE_BLOCK}
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            imageFormat: "2"
            imageFeatures: layering,exclusive-lock,object-map,fast-diff,deep-flatten
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: ${CLUSTER_SNAPSHOT_BLOCK}
      isDefault: true
      deletionPolicy: Delete
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: ceph-filesystem
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ${CLUSTER_STORAGE_FILESYSTEM}
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: ${CLUSTER_SNAPSHOT_FILESYSTEM}
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []
