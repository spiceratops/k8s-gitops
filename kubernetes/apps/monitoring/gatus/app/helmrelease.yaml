---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: gatus
  namespace: monitoring
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            order: 1
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
            envFrom: &envFrom
              - secretRef:
                  name: gatus-secret
          init-config:
            order: 2
            image: &syncImage
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.26.1
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: LIST
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 128M
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.9.0
            env:
              TZ: ${TIMEZONE}
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 8080
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 512M
          config-sync:
            image: *syncImage
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 128M
        pod:
          securityContext:
            runAsUser: "${APP_UID}"
            runAsGroup: "${APP_GID}"
            fsGroup: "${APP_GID}"
            fsGroupChangePolicy: OnRootMismatch
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: gatus.png
          gethomepage.dev/name: Gatus
          gethomepage.dev/group: Tools
          gethomepage.dev/description: Status Page
        hosts:
          - host: ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - ${HOSTNAME}
    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port
    serviceAccount:
      create: true
      name: gatus
