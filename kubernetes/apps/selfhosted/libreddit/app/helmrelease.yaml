---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: libreddit
  namespace: selfhosted
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      libreddit:
        replicas: 2
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/auricom/libreddit
              tag: 0.30.1@sha256:aa1694e09eb6051232766845cedc7bf67e2050cefb074ca700801524169262f4
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /settings
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 5m
                memory: 36M
              limits:
                memory: 128M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ${APP}
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          gatus.io/enabled: "true"
          gatus.io/path: *path
          # nginx.ingress.kubernetes.io/auth-method: GET
          # nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local:9091/api/authz/auth-request
          # nginx.ingress.kubernetes.io/auth-signin: https://auth.${PRIVATE_DOMAIN}?rm=$request_method
          # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          external-dns.alpha.kubernetes.io/target: external.${PRIVATE_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Reddit Reader
          gethomepage.dev/group: Reading
          gethomepage.dev/icon: reddit.png
          gethomepage.dev/name: Libreddit
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:reddit
          hajimari.io/appName: Libreddit
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
    service:
      app:
        controller: libreddit
        ports:
          http:
            port: *port
