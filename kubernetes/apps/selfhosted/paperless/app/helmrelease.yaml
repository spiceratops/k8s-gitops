---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
  namespace: selfhosted
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.7.2@sha256:703c990a790dfd4d25fb56df3afec27b13cb0926a3818bf265edac9c71311647
            env:
              COMPOSE_PROJECT_NAME: paperless
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTH_REQUEST_EMAIL
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_PORT: &port 8000
              PAPERLESS_DBNAME: paperless
              PAPERLESS_REDIS: redis://redis.databases.svc.cluster.local.:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_URL: https://${HOSTNAME}
              USERMAP_UID: "${APP_UID}"
              USERMAP_GID: "${APP_GID}"
            envFrom: *envFrom
            resources:
              requests:
                cpu: 50m
                memory: 2Gi
              limits:
                memory: 6Gi
        pod:
          enableServiceLinks: false
          securityContext:
            fsGroup: "${APP_GID}"
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: paperless.png
          gethomepage.dev/name: Paperless
          gethomepage.dev/group: Home
          gethomepage.dev/description: Document Library
          # nginx.ingress.kubernetes.io/auth-method: GET
          # nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          # nginx.ingress.kubernetes.io/auth-signin: https://auth.${PRIVATE_DOMAIN}/rm=$request_method
          # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          # nginx.ingress.kubernetes.io/proxy-body-size: "0"
        className: internal
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
    persistence:
      config:
        type: nfs
        server: nas.${PRIVATE_DOMAIN}
        path: /mnt/data/media-data/documents/paperless
        globalMounts:
          - path: /data/local
