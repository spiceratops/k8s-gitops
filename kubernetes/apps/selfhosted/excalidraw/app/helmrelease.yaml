---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: excalidraw
  namespace: selfhosted
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  driftDetection:
    mode: enabled

  values:
    controllers:
      excalidraw:
        replicas: 2
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: docker.io/excalidraw/excalidraw
              tag: latest@sha256:56163a0c3eaeaf3444b3addf60d7cb6011a56bd17a7d0e1c24f11e62324a5d07
              pullPolicy: IfNotPresent
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 50Mi
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ${APP}
    service:
      app:
        controller: excalidraw
        ports:
          http:
            port: 80
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${PRIVATE_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: excalidraw.png
          gethomepage.dev/name: Excalidraw
          gethomepage.dev/group: Tools
          gethomepage.dev/description: Whiteboarding Tool
          # nginx.ingress.kubernetes.io/auth-method: GET
          # nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local:9091/api/authz/auth-request
          # nginx.ingress.kubernetes.io/auth-signin: https://auth.${PRIVATE_DOMAIN}?rm=$request_method
          # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:excalidraw
          hajimari.io/appName: Excalidraw
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
