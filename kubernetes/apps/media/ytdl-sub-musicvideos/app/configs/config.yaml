---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: ytdl-sub-musicvideos
data:
  config.yaml: |-
    configuration:
      working_directory: "/tmp/ytdl-sub"

    presets:

      ###############################################################################
      # Set tv_show_directory here instead of in the subscriptions file
      music_video_paths:
        overrides:
          music_video_directory: "/media/music-videos"

      ###############################################################################
      # Filter out any YouTube shorts
      no_shorts:
        match_filters:
          filters:
            - "original_url!*=/shorts/"

      ###############################################################################
      # base preset to use on all TV Show-based subscriptions
      base:
        preset:
          - "Jellyfin Music Videos"  # Set intended player
          - "best_video_quality"    # prebuilt preset to get best quality
          - "music_video_paths"
          - "no_shorts"

        # Embed chapters into video files
        chapters:
          embed_chapters: True
          allow_chapters_from_comments: False
          remove_chapters_regex:
            - "Intro"
            - "Outro"
          sponsorblock_categories:
            - "outro"
            - "selfpromo"
            - "preview"
            - "interaction"
            - "sponsor"
            - "music_offtopic"
            - "intro"
          remove_sponsorblock_categories: "all"

        # Embed English subtitles into video files (supports more)
        subtitles:
          embed_subtitles: True
          languages:
            - "en"
          allow_auto_generated_subtitles: True

        # ytdl_options lets you pass any arg into yt-dlp's Python API
        ytdl_options:
          # Set the cookie file
          cookiefile: "/config/youtube_cookies.txt"

          # For YouTube, get English metadata if multiple languages are present
          extractor_args:
            youtube:
              lang:
                - "en"

          format: "(bestvideo[vcodec^=av01][height>=4320][fps>30]/bestvideo[vcodec^=vp09.02][height>=4320][fps>30]/bestvideo[vcodec^=vp09.00][height>=4320][fps>30]/bestvideo[vcodec^=vp9][height>=4320][fps>30]/bestvideo[vcodec^=avc1][height>=4320][fps>30]/bestvideo[height>=4320][fps>30]/bestvideo[vcodec^=av01][height>=4320]/bestvideo[vcodec^=vp09.02][height>=4320]/bestvideo[vcodec^=vp09.00][height>=4320]/bestvideo[vcodec^=vp9][height>=4320]/bestvideo[vcodec^=avc1][height>=4320]/bestvideo[height>=4320]/bestvideo[vcodec^=av01][height>=2880][fps>30]/bestvideo[vcodec^=vp09.02][height>=2880][fps>30]/bestvideo[vcodec^=vp09.00][height>=2880][fps>30]/bestvideo[vcodec^=vp9][height>=2880][fps>30]/bestvideo[vcodec^=avc1][height>=2880][fps>30]/bestvideo[height>=2880][fps>30]/bestvideo[vcodec^=av01][height>=2880]/bestvideo[vcodec^=vp09.02][height>=2880]/bestvideo[vcodec^=vp09.00][height>=2880]/bestvideo[vcodec^=vp9][height>=2880]/bestvideo[vcodec^=avc1][height>=2880]/bestvideo[height>=2880]/bestvideo[vcodec^=av01][height>=2160][fps>30]/bestvideo[vcodec^=vp09.02][height>=2160][fps>30]/bestvideo[vcodec^=vp09.00][height>=2160][fps>30]/bestvideo[vcodec^=vp9][height>=2160][fps>30]/bestvideo[vcodec^=avc1][height>=2160][fps>30]/bestvideo[height>=2160][fps>30]/bestvideo[vcodec^=av01][height>=2160]/bestvideo[vcodec^=vp09.02][height>=2160]/bestvideo[vcodec^=vp09.00][height>=2160]/bestvideo[vcodec^=vp9][height>=2160]/bestvideo[vcodec^=avc1][height>=2160]/bestvideo[height>=2160]/bestvideo[vcodec^=av01][height>=1440][fps>30]/bestvideo[vcodec^=vp09.02][height>=1440][fps>30]/bestvideo[vcodec^=vp09.00][height>=1440][fps>30]/bestvideo[vcodec^=vp9][height>=1440][fps>30]/bestvideo[vcodec^=avc1][height>=1440][fps>30]/bestvideo[height>=1440][fps>30]/bestvideo[vcodec^=av01][height>=1440]/bestvideo[vcodec^=vp09.02][height>=1440]/bestvideo[vcodec^=vp09.00][height>=1440]/bestvideo[vcodec^=vp9][height>=1440]/bestvideo[vcodec^=avc1][height>=1440]/bestvideo[height>=1440]/bestvideo[vcodec^=av01][height>=1080][fps>30]/bestvideo[vcodec^=vp09.02][height>=1080][fps>30]/bestvideo[vcodec^=vp09.00][height>=1080][fps>30]/bestvideo[vcodec^=vp9][height>=1080][fps>30]/bestvideo[vcodec^=avc1][height>=1080][fps>30]/bestvideo[height>=1080][fps>30]/bestvideo[vcodec^=av01][height>=1080]/bestvideo[vcodec^=vp09.02][height>=1080]/bestvideo[vcodec^=vp09.00][height>=1080]/bestvideo[vcodec^=vp9][height>=1080]/bestvideo[vcodec^=avc1][height>=1080]/bestvideo[height>=1080]/bestvideo[vcodec^=av01][height>=720][fps>30]/bestvideo[vcodec^=vp09.02][height>=720][fps>30]/bestvideo[vcodec^=vp09.00][height>=720][fps>30]/bestvideo[vcodec^=vp9][height>=720][fps>30]/bestvideo[vcodec^=avc1][height>=720][fps>30]/bestvideo[height>=720][fps>30]/bestvideo[vcodec^=av01][height>=720]/bestvideo[vcodec^=vp09.02][height>=720]/bestvideo[vcodec^=vp09.00][height>=720]/bestvideo[vcodec^=vp9][height>=720]/bestvideo[vcodec^=avc1][height>=720]/bestvideo[height>=720]/bestvideo[vcodec^=av01][height>=480][fps>30]/bestvideo[vcodec^=vp09.02][height>=480][fps>30]/bestvideo[vcodec^=vp09.00][height>=480][fps>30]/bestvideo[vcodec^=vp9][height>=480][fps>30]/bestvideo[vcodec^=avc1][height>=480][fps>30]/bestvideo[height>=480][fps>30]/bestvideo[vcodec^=av01][height>=480]/bestvideo[vcodec^=vp09.02][height>=480]/bestvideo[vcodec^=vp09.00][height>=480]/bestvideo[vcodec^=vp9][height>=480]/bestvideo[vcodec^=avc1][height>=480]/bestvideo[height>=480]/bestvideo[vcodec^=av01][height>=360][fps>30]/bestvideo[vcodec^=vp09.02][height>=360][fps>30]/bestvideo[vcodec^=vp09.00][height>=360][fps>30]/bestvideo[vcodec^=vp9][height>=360][fps>30]/bestvideo[vcodec^=avc1][height>=360][fps>30]/bestvideo[height>=360][fps>30]/bestvideo[vcodec^=av01][height>=360]/bestvideo[vcodec^=vp09.02][height>=360]/bestvideo[vcodec^=vp09.00][height>=360]/bestvideo[vcodec^=vp9][height>=360]/bestvideo[vcodec^=avc1][height>=360]/bestvideo[height>=360]/bestvideo[vcodec^=avc1][height>=240][fps>30]/bestvideo[vcodec^=av01][height>=240][fps>30]/bestvideo[vcodec^=vp09.02][height>=240][fps>30]/bestvideo[vcodec^=vp09.00][height>=240][fps>30]/bestvideo[vcodec^=vp9][height>=240][fps>30]/bestvideo[height>=240][fps>30]/bestvideo[vcodec^=avc1][height>=240]/bestvideo[vcodec^=av01][height>=240]/bestvideo[vcodec^=vp09.02][height>=240]/bestvideo[vcodec^=vp09.00][height>=240]/bestvideo[vcodec^=vp9][height>=240]/bestvideo[height>=240]/bestvideo[vcodec^=avc1][height>=144][fps>30]/bestvideo[vcodec^=av01][height>=144][fps>30]/bestvideo[vcodec^=vp09.02][height>=144][fps>30]/bestvideo[vcodec^=vp09.00][height>=144][fps>30]/bestvideo[vcodec^=vp9][height>=144][fps>30]/bestvideo[height>=144][fps>30]/bestvideo[vcodec^=avc1][height>=144]/bestvideo[vcodec^=av01][height>=144]/bestvideo[vcodec^=vp09.02][height>=144]/bestvideo[vcodec^=vp09.00][height>=144]/bestvideo[vcodec^=vp9][height>=144]/bestvideo[height>=144]/bestvideo)+(bestaudio[acodec^=opus]/bestaudio)/best"
          ignoreerrors: True
          break_on_existing: True
          break_on_reject: False
          final_ext: mkv
          cachedir: "/tmp/ytdl-sub"

        throttle_protection:
          sleep_per_download_s:
            min: 2.2
            max: 14.8
          sleep_per_subscription_s:
            min: 9.0
            max: 14.1
          max_downloads_per_subscription:
            min: 18
            max: 43
          subscription_download_probability: 1.0

        file_convert:
          convert_to: "mkv"

      ###############################################################################
      # Custom preset to archive an entire channel
      Jellyfin Music Videos:
        preset:
          - "base"

  subscriptions.yaml: |-
    Jellyfin Music Videos:
      = Rock:
        # Prefixing with '+' puts the subscription into 'map-mode'.
        # Music video presets in map-mode support grouping videos into different
        # categories, which get set on the album field.
        #
        # URLs can either be strings, or maps that can overload title, year, date
        "+ Sleep Token":
          Music Videos:
            - "https://www.youtube.com/watch?v=wJNbtYdr-Hg"
            - "https://www.youtube.com/watch?v=vFHBOKa_ZG0"
            - "https://www.youtube.com/watch?v=uU5vVT_Cp7c"
            - "https://www.youtube.com/watch?v=om4dEGKnEmw"
            - "https://www.youtube.com/watch?v=-UUSUrr6zyo"
            - "https://www.youtube.com/watch?v=nVE1ziLuSNg"
          Concerts:
            - title: "Live at The Ritz - New York City"
              year: "1988"
              url: "https://www.youtube.com/watch?v=OldpIhHPsbs"
            - title: "Live at The Hollywood Bowl"
              date: "2023-01-11"
              url: "https://www.youtube.com/watch?v=Z7hutGlvq9I"
