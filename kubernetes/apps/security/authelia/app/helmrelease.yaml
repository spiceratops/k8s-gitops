---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
  namespace: security
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  driftDetection:
    mode: enabled

  values:
    controllers:
      authelia:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: authelia-secret
        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.19@sha256:46021dc20efdcc5cdc38a29e3050b8835429a155ae6215388ed3b793a02eb0ab
            env:
              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:9091
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: true
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: true
              AUTHELIA_THEME: dark
              X_AUTHELIA_CONFIG: /config/configuration.yaml
              X_AUTHELIA_CONFIG_FILTERS: template
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 64M
              limits:
                memory: 256M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ${APP}
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          # external-dns.alpha.kubernetes.io/enabled: "true"
          # external-dns.alpha.kubernetes.io/target: external.${PRIVATE_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: Authelia
          gethomepage.dev/icon: authelia.png
          gethomepage.dev/pod-selector: >-
            app in (
              authelia
            )
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
      secret-files:
        enabled: true
        type: secret
        name: authelia-secret
        globalMounts:
          - path: /config/secret
    service:
      app:
        controller: authelia
        ports:
          http:
            port: 9091
          metrics:
            port: 8080
    serviceMonitor:
      app:
        serviceName: authelia
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 30s
